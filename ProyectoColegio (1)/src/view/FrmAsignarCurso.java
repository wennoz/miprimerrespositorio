/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.JOptionPane;
import Controller.ControllerCurso;
import Controller.ControllerProfesor;
import Modell.ClaseProfesor;
import Modell.ClaseCurso;
import Modell.ClasePersona;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class FrmAsignarCurso extends javax.swing.JFrame {

    public static List<ClaseCurso> cursos = ControllerCurso.getCursos();// se trae la lista de cursos con el metodo get
    private List<ClaseProfesor> ListaProfesor = new ArrayList<>();// se trea la lista de profesor con el metodo get
    private Set<String> setDatos = new HashSet<String>();// se crea un hashset para guardar los datos de la lista para mostra en el combo box
    private boolean seAgregaronDatos = false;// este se utiliza para verificar se se han agregado los datos

    /**
     * Creates new form FrmAsignarCurso
     */
    public FrmAsignarCurso() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.ListaProfesor = ControllerProfesor.getListaProfesor();// aca se llena los datos del profesor en en la nueva lista
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnVolver = new javax.swing.JButton();
        BtnAgregar = new javax.swing.JButton();
        BtnActualizar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TxtIdentificacion = new javax.swing.JTextField();
        BoxCursos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblCursos = new javax.swing.JTable();
        JlCodigo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnVolver.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        BtnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/volver.png"))); // NOI18N
        BtnVolver.setText("Volver");
        BtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVolverActionPerformed(evt);
            }
        });

        BtnAgregar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        BtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/agregar.png"))); // NOI18N
        BtnAgregar.setText("Agregar");
        BtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActionPerformed(evt);
            }
        });

        BtnActualizar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        BtnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/actualizar.png"))); // NOI18N
        BtnActualizar.setText("Actualizar");
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });

        BtnEliminar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        BtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrar.png"))); // NOI18N
        BtnEliminar.setText("Eliminar");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel1.setText("Asignar cursos");

        TxtIdentificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtIdentificacionActionPerformed(evt);
            }
        });

        BoxCursos.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        BoxCursos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        BoxCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxCursosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel2.setText("Identificación");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel3.setText("Cursos");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TblCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Curso", "Identificación"
            }
        ));
        jScrollPane1.setViewportView(TblCursos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 17, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BtnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BtnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(BtnActualizar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BoxCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TxtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnEliminar)
                            .addComponent(JlCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BoxCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(JlCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAgregar)
                    .addComponent(BtnActualizar)
                    .addComponent(BtnEliminar))
                .addGap(18, 18, 18)
                .addComponent(BtnVolver)
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    private void BtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVolverActionPerformed
        FrmMenu newframe = new FrmMenu();
        newframe.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_BtnVolverActionPerformed

    private void BtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActionPerformed
        if (TxtIdentificacion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos obligatorios");
        } else {
            String nombre = (String) BoxCursos.getSelectedItem();
            if (nombre.equals("seleccionar")) {
                JOptionPane.showMessageDialog(null, "por favor seleccione un curso");
            } else {
                for (ClaseProfesor profesor : ListaProfesor) {   // se recorre la lista de profesor     
                    if (profesor.getIdentificacion().equalsIgnoreCase(TxtIdentificacion.getText())) {  // se busca al profesor por su identificacion            
                        ControllerProfesor profe = new ControllerProfesor();// si existe el profesor se crea est eobjecto de controlador
                        String nombre2 = (String) BoxCursos.getSelectedItem();// luego se toma lo que se seleciono en el combo box
                        int codigo = Integer.parseInt(JlCodigo.getText());//luego se toma el codigo del label 
                        if (profe.agregarcursoImparte(codigo, nombre, profesor)) {// con el objecto controlador se usa el metodo agregar y se le pasan los datos del curso
                            JOptionPane.showMessageDialog(null, "curso agregado");
                               Listar();
                        } else {
                            JOptionPane.showMessageDialog(null, "curso no agregado");
                        }

                    }
                }

            }

        }
    }//GEN-LAST:event_BtnAgregarActionPerformed

    private void BoxCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxCursosActionPerformed
        combox();
    }//GEN-LAST:event_BoxCursosActionPerformed

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed
        for (ClaseProfesor profesor : ListaProfesor) {   // aca se hace lo mismo que en agregar, lo unico es que se utiliza otro metodo     
            if (profesor.getIdentificacion().equalsIgnoreCase(TxtIdentificacion.getText())) {
                ControllerProfesor profe = new ControllerProfesor();
                String nombre = (String) BoxCursos.getSelectedItem();
                int codigo = Integer.parseInt(JlCodigo.getText());
                if (profe.editarcurso(codigo, nombre, profesor)) {// aca se utiliza el metodo editar
                    JOptionPane.showMessageDialog(null, "curso agregado");
                     Listar();
                } else {
                    JOptionPane.showMessageDialog(null, "curso no agregado");
                }

            }
        }
    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        for (ClaseProfesor profesor : ListaProfesor) {// lo mismo que en agregar solo que solo se toma la identificacion y se usa el metdo eliminar       
            if (profesor.getIdentificacion().equalsIgnoreCase(TxtIdentificacion.getText())) {
                ControllerProfesor profe = new ControllerProfesor();
                int codigo = Integer.parseInt(JlCodigo.getText());
                if (profe.eliminarcurso(codigo, profesor)) {
                    JOptionPane.showMessageDialog(null, "curso eliminado");
                      Listar();
                } else {
                    JOptionPane.showMessageDialog(null, "curso no eliminado");
                }

            }
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void TxtIdentificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtIdentificacionActionPerformed
       combox();
    }//GEN-LAST:event_TxtIdentificacionActionPerformed
    public void combox() {
        if (!seAgregaronDatos) { // Verifica si ya se han agregado los datos
            ControllerCurso control = new ControllerCurso();//se crea un objecto que nos va a servir para tarer el hastse de los nombres de los cursos 
            Set<String> nombresCursosSinDuplicados = control.getNombresCursosSinDuplicados();// se trae el hastset y se llena uno nuevo 

            for (String nombre : nombresCursosSinDuplicados) {// se recorre este nuevo hastset y se agregan los datos al combo box
                BoxCursos.addItem(nombre);
            }

            seAgregaronDatos = true;// se cambia a true para que no se vuelvan a agregar los mismos daatos al combo box cuando se le de click 
        }

        String nombre = (String) BoxCursos.getSelectedItem();// luego se toma lo que se selecciono en el combo box
        for (ClaseCurso curso : cursos) {// se recorre la lista 
            if (nombre.equalsIgnoreCase(curso.getNombre())) {// se busca el nombre 
                String codigo = Integer.toString(curso.getCodigo());// si se encuentra se saca el codigo del curso 
                JlCodigo.setText(codigo);// se muestra el codigo del curso
            }
        }

    }
       public void Listar(){
        for (ClaseProfesor profesor : ListaProfesor) {    // se recorre a lista del profesor    
            if (profesor.getIdentificacion().equalsIgnoreCase(TxtIdentificacion.getText())) {//se mira si la identificacion existe en la lista de prpfesores       
                List<ClaseCurso> cursoimparte = profesor.getCursoimparte();// se trae la lista de curso que impart e

                DefaultTableModel modelo = new DefaultTableModel();// si llaga a tener datos ya se muestran en la tabla 
                modelo.addColumn("Curso");
                modelo.addColumn("Identificación");
                TblCursos.setModel(modelo);
                for (ClaseCurso curso : cursoimparte) {
                    String Codigo = Integer.toString(curso.getCodigo());
                    String Identificacion = TxtIdentificacion.getText();
                    String[] Fila = new String[2];
                    Fila[0] = Codigo;
                    Fila[1] = Identificacion;
                    modelo.addRow(Fila);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Profesor no existe");
            }
        }
       
       
       }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAsignarCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAsignarCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAsignarCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAsignarCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAsignarCurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BoxCursos;
    private javax.swing.JButton BtnActualizar;
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnVolver;
    private javax.swing.JLabel JlCodigo;
    private javax.swing.JTable TblCursos;
    private javax.swing.JTextField TxtIdentificacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void setLocationRelativeTo(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
